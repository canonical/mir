name: Snap

on:
  push:
    branches:
    - staging
    - trying
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  mir-core20:
    runs-on: ubuntu-20.04

    timeout-minutes: 30

    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # needed for version determination

    - name: Build and publish the snap
      uses: canonical/actions/build-snap@release
      with:
        snapcraft-token: ${{ secrets.SNAPCRAFT_TOKEN }}
        publish: ${{ github.event_name == 'pull_request' && github.repository == github.event.pull_request.head.repo.full_name }}
        publish-channel: edge/pr${{ github.event.number }}

  snap:
    # Only run if we have access to secrets.
    if: ${{ github.event_name == 'pull_request' && github.repository == github.event.pull_request.head.repo.full_name }}

    needs: [mir-core20]

    runs-on: ubuntu-20.04

    timeout-minutes: 30

    strategy:
      matrix:
        snap:
        - MirServer/mir-kiosk
        - MirServer/mir-test-tools
        - MirServer/egmde-confined-desktop
        - MirServer/ubuntu-frame

    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        repository: ${{ matrix.snap }}
        ref: mir-build-snap
        fetch-depth: 0  # needed for version determination

    - name: Tweak the stage snap
      run: |
        sed -i 's@- mir-core20@\0/latest/edge/pr${{ github.event.number }}@' snap/snapcraft.yaml

    - name: Build and publish the snap
      uses: canonical/actions/build-snap@release
      with:
        snapcraft-token: ${{ secrets.SNAPCRAFT_TOKEN }}
        publish: true
        publish-channel: edge/mir-pr${{ github.event.number }}
